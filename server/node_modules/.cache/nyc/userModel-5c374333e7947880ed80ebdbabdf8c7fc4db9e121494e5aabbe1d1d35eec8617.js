"use strict";

function cov_134n5i6v3o() {
  var path = "/Users/nshutip/Desktop/Andela/my-brand-backend/server/models/userModel.js";
  var hash = "fda7cdcdc04540eb184bac26bb4b44fd0f7437e2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/nshutip/Desktop/Andela/my-brand-backend/server/models/userModel.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 1,
          column: 36
        }
      },
      "1": {
        start: {
          line: 3,
          column: 15
        },
        end: {
          line: 9,
          column: 2
        }
      },
      "2": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 47
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fda7cdcdc04540eb184bac26bb4b44fd0f7437e2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_134n5i6v3o = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_134n5i6v3o();
var mongoose = (cov_134n5i6v3o().s[0]++, require("mongoose"));
var schema = (cov_134n5i6v3o().s[1]++, mongoose.Schema({
  first_name: String,
  last_name: String,
  email: String,
  password: String,
  token: String
}));
cov_134n5i6v3o().s[2]++;
module.exports = mongoose.model("User", schema);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTM0bjVpNnYzbyIsImFjdHVhbENvdmVyYWdlIiwibW9uZ29vc2UiLCJzIiwicmVxdWlyZSIsInNjaGVtYSIsIlNjaGVtYSIsImZpcnN0X25hbWUiLCJTdHJpbmciLCJsYXN0X25hbWUiLCJlbWFpbCIsInBhc3N3b3JkIiwidG9rZW4iLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kZWwiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9uc2h1dGlwL0Rlc2t0b3AvQW5kZWxhL215LWJyYW5kLWJhY2tlbmQvc2VydmVyL21vZGVscy8iLCJzb3VyY2VzIjpbInVzZXJNb2RlbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKVxuXG5jb25zdCBzY2hlbWEgPSBtb25nb29zZS5TY2hlbWEoe1xuXHRmaXJzdF9uYW1lOiBTdHJpbmcsXG5cdGxhc3RfbmFtZTogU3RyaW5nLFxuXHRlbWFpbDogU3RyaW5nLFxuICAgIHBhc3N3b3JkOiBTdHJpbmcsXG5cdHRva2VuOiBTdHJpbmcsXG59KVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKFwiVXNlclwiLCBzY2hlbWEpXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBZVk7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQWZaLElBQU1FLFFBQVEsSUFBQUYsY0FBQSxHQUFBRyxDQUFBLE9BQUdDLE9BQU8sQ0FBQyxVQUFVLENBQUM7QUFFcEMsSUFBTUMsTUFBTSxJQUFBTCxjQUFBLEdBQUFHLENBQUEsT0FBR0QsUUFBUSxDQUFDSSxNQUFNLENBQUM7RUFDOUJDLFVBQVUsRUFBRUMsTUFBTTtFQUNsQkMsU0FBUyxFQUFFRCxNQUFNO0VBQ2pCRSxLQUFLLEVBQUVGLE1BQU07RUFDVkcsUUFBUSxFQUFFSCxNQUFNO0VBQ25CSSxLQUFLLEVBQUVKO0FBQ1IsQ0FBQyxDQUFDO0FBQUFSLGNBQUEsR0FBQUcsQ0FBQTtBQUVGVSxNQUFNLENBQUNDLE9BQU8sR0FBR1osUUFBUSxDQUFDYSxLQUFLLENBQUMsTUFBTSxFQUFFVixNQUFNLENBQUMifQ==