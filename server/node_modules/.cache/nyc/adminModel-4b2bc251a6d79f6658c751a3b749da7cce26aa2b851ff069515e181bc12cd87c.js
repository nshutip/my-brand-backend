"use strict";

function cov_8kcuholwf() {
  var path = "/Users/nshutip/Desktop/Andela/my-brand-backend/server/models/adminModel.js";
  var hash = "f56802c07607167904c0441df3c2dd7b0b34696f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/nshutip/Desktop/Andela/my-brand-backend/server/models/adminModel.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 1,
          column: 36
        }
      },
      "1": {
        start: {
          line: 3,
          column: 15
        },
        end: {
          line: 9,
          column: 2
        }
      },
      "2": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 48
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f56802c07607167904c0441df3c2dd7b0b34696f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8kcuholwf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8kcuholwf();
var mongoose = (cov_8kcuholwf().s[0]++, require("mongoose"));
var schema = (cov_8kcuholwf().s[1]++, mongoose.Schema({
  first_name: String,
  last_name: String,
  email: String,
  password: String,
  token: String
}));
cov_8kcuholwf().s[2]++;
module.exports = mongoose.model("Admin", schema);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfOGtjdWhvbHdmIiwiYWN0dWFsQ292ZXJhZ2UiLCJtb25nb29zZSIsInMiLCJyZXF1aXJlIiwic2NoZW1hIiwiU2NoZW1hIiwiZmlyc3RfbmFtZSIsIlN0cmluZyIsImxhc3RfbmFtZSIsImVtYWlsIiwicGFzc3dvcmQiLCJ0b2tlbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJzb3VyY2VSb290IjoiL1VzZXJzL25zaHV0aXAvRGVza3RvcC9BbmRlbGEvbXktYnJhbmQtYmFja2VuZC9zZXJ2ZXIvbW9kZWxzLyIsInNvdXJjZXMiOlsiYWRtaW5Nb2RlbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKVxuXG5jb25zdCBzY2hlbWEgPSBtb25nb29zZS5TY2hlbWEoe1xuXHRmaXJzdF9uYW1lOiBTdHJpbmcsXG5cdGxhc3RfbmFtZTogU3RyaW5nLFxuXHRlbWFpbDogU3RyaW5nLFxuICAgIHBhc3N3b3JkOiBTdHJpbmcsXG5cdHRva2VuOiBTdHJpbmcsXG59KVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKFwiQWRtaW5cIiwgc2NoZW1hKVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWVZO0lBQUFBLGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGFBQUE7QUFmWixJQUFNRSxRQUFRLElBQUFGLGFBQUEsR0FBQUcsQ0FBQSxPQUFHQyxPQUFPLENBQUMsVUFBVSxDQUFDO0FBRXBDLElBQU1DLE1BQU0sSUFBQUwsYUFBQSxHQUFBRyxDQUFBLE9BQUdELFFBQVEsQ0FBQ0ksTUFBTSxDQUFDO0VBQzlCQyxVQUFVLEVBQUVDLE1BQU07RUFDbEJDLFNBQVMsRUFBRUQsTUFBTTtFQUNqQkUsS0FBSyxFQUFFRixNQUFNO0VBQ1ZHLFFBQVEsRUFBRUgsTUFBTTtFQUNuQkksS0FBSyxFQUFFSjtBQUNSLENBQUMsQ0FBQztBQUFBUixhQUFBLEdBQUFHLENBQUE7QUFFRlUsTUFBTSxDQUFDQyxPQUFPLEdBQUdaLFFBQVEsQ0FBQ2EsS0FBSyxDQUFDLE9BQU8sRUFBRVYsTUFBTSxDQUFDIn0=