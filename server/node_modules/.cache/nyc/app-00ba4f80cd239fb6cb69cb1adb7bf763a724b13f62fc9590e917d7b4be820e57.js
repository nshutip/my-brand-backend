"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function cov_1qshf54gp7() {
  var path = "/Users/nshutip/Desktop/Andela/my-brand-backend/server/app.js";
  var hash = "f00a2c65d2ec625d9f7a5475729fa122306c8126";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/nshutip/Desktop/Andela/my-brand-backend/server/app.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 21
        },
        end: {
          line: 2,
          column: 44
        }
      },
      "2": {
        start: {
          line: 3,
          column: 15
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "3": {
        start: {
          line: 4,
          column: 12
        },
        end: {
          line: 4,
          column: 26
        }
      },
      "4": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 32
        }
      },
      "5": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 47
        }
      },
      "6": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "7": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 31
        }
      },
      "8": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 48
        }
      },
      "9": {
        start: {
          line: 11,
          column: 13
        },
        end: {
          line: 11,
          column: 42
        }
      },
      "10": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "11": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 44
        }
      },
      "12": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "13": {
        start: {
          line: 15,
          column: 13
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "14": {
        start: {
          line: 17,
          column: 18
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "15": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "16": {
        start: {
          line: 21,
          column: 68
        },
        end: {
          line: 21,
          column: 101
        }
      },
      "17": {
        start: {
          line: 23,
          column: 19
        },
        end: {
          line: 23,
          column: 85
        }
      },
      "18": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 32,
          column: 2
        }
      },
      "19": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 25
        }
      },
      "20": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 59
        }
      },
      "21": {
        start: {
          line: 34,
          column: 15
        },
        end: {
          line: 34,
          column: 43
        }
      },
      "22": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 49,
          column: 2
        }
      },
      "23": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 48,
          column: 3
        }
      },
      "24": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 41
        }
      },
      "25": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 41
        }
      },
      "26": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 58
        }
      },
      "27": {
        start: {
          line: 52,
          column: 0
        },
        end: {
          line: 82,
          column: 2
        }
      },
      "28": {
        start: {
          line: 60,
          column: 2
        },
        end: {
          line: 81,
          column: 3
        }
      },
      "29": {
        start: {
          line: 61,
          column: 27
        },
        end: {
          line: 61,
          column: 52
        }
      },
      "30": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 58
        }
      },
      "31": {
        start: {
          line: 63,
          column: 15
        },
        end: {
          line: 63,
          column: 58
        }
      },
      "32": {
        start: {
          line: 65,
          column: 19
        },
        end: {
          line: 65,
          column: 31
        }
      },
      "33": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 23
        }
      },
      "34": {
        start: {
          line: 69,
          column: 20
        },
        end: {
          line: 74,
          column: 6
        }
      },
      "35": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 24
        }
      },
      "36": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 79
        }
      },
      "37": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 25
        }
      },
      "38": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 61
        }
      },
      "39": {
        start: {
          line: 85,
          column: 0
        },
        end: {
          line: 92,
          column: 2
        }
      },
      "40": {
        start: {
          line: 90,
          column: 17
        },
        end: {
          line: 90,
          column: 101
        }
      },
      "41": {
        start: {
          line: 91,
          column: 1
        },
        end: {
          line: 91,
          column: 37
        }
      },
      "42": {
        start: {
          line: 95,
          column: 0
        },
        end: {
          line: 123,
          column: 2
        }
      },
      "43": {
        start: {
          line: 103,
          column: 1
        },
        end: {
          line: 122,
          column: 2
        }
      },
      "44": {
        start: {
          line: 104,
          column: 18
        },
        end: {
          line: 104,
          column: 63
        }
      },
      "45": {
        start: {
          line: 106,
          column: 2
        },
        end: {
          line: 108,
          column: 3
        }
      },
      "46": {
        start: {
          line: 107,
          column: 3
        },
        end: {
          line: 107,
          column: 33
        }
      },
      "47": {
        start: {
          line: 110,
          column: 2
        },
        end: {
          line: 112,
          column: 3
        }
      },
      "48": {
        start: {
          line: 111,
          column: 3
        },
        end: {
          line: 111,
          column: 37
        }
      },
      "49": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 116,
          column: 3
        }
      },
      "50": {
        start: {
          line: 115,
          column: 3
        },
        end: {
          line: 115,
          column: 33
        }
      },
      "51": {
        start: {
          line: 118,
          column: 2
        },
        end: {
          line: 118,
          column: 22
        }
      },
      "52": {
        start: {
          line: 119,
          column: 2
        },
        end: {
          line: 119,
          column: 38
        }
      },
      "53": {
        start: {
          line: 121,
          column: 2
        },
        end: {
          line: 121,
          column: 59
        }
      },
      "54": {
        start: {
          line: 126,
          column: 0
        },
        end: {
          line: 140,
          column: 2
        }
      },
      "55": {
        start: {
          line: 134,
          column: 1
        },
        end: {
          line: 139,
          column: 2
        }
      },
      "56": {
        start: {
          line: 135,
          column: 20
        },
        end: {
          line: 135,
          column: 67
        }
      },
      "57": {
        start: {
          line: 136,
          column: 2
        },
        end: {
          line: 136,
          column: 71
        }
      },
      "58": {
        start: {
          line: 138,
          column: 2
        },
        end: {
          line: 138,
          column: 59
        }
      },
      "59": {
        start: {
          line: 143,
          column: 0
        },
        end: {
          line: 180,
          column: 2
        }
      },
      "60": {
        start: {
          line: 151,
          column: 2
        },
        end: {
          line: 179,
          column: 2
        }
      },
      "61": {
        start: {
          line: 152,
          column: 27
        },
        end: {
          line: 152,
          column: 52
        }
      },
      "62": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "63": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 155,
          column: 24
        }
      },
      "64": {
        start: {
          line: 156,
          column: 6
        },
        end: {
          line: 156,
          column: 48
        }
      },
      "65": {
        start: {
          line: 159,
          column: 19
        },
        end: {
          line: 159,
          column: 31
        }
      },
      "66": {
        start: {
          line: 161,
          column: 20
        },
        end: {
          line: 165,
          column: 6
        }
      },
      "67": {
        start: {
          line: 167,
          column: 25
        },
        end: {
          line: 167,
          column: 45
        }
      },
      "68": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 173,
          column: 26
        }
      },
      "69": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 175,
          column: 80
        }
      },
      "70": {
        start: {
          line: 178,
          column: 2
        },
        end: {
          line: 178,
          column: 59
        }
      },
      "71": {
        start: {
          line: 183,
          column: 0
        },
        end: {
          line: 193,
          column: 2
        }
      },
      "72": {
        start: {
          line: 191,
          column: 17
        },
        end: {
          line: 191,
          column: 83
        }
      },
      "73": {
        start: {
          line: 192,
          column: 1
        },
        end: {
          line: 192,
          column: 46
        }
      },
      "74": {
        start: {
          line: 196,
          column: 0
        },
        end: {
          line: 224,
          column: 2
        }
      },
      "75": {
        start: {
          line: 204,
          column: 1
        },
        end: {
          line: 223,
          column: 2
        }
      },
      "76": {
        start: {
          line: 206,
          column: 19
        },
        end: {
          line: 206,
          column: 31
        }
      },
      "77": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 207,
          column: 23
        }
      },
      "78": {
        start: {
          line: 209,
          column: 20
        },
        end: {
          line: 209,
          column: 66
        }
      },
      "79": {
        start: {
          line: 211,
          column: 22
        },
        end: {
          line: 211,
          column: 36
        }
      },
      "80": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 212,
          column: 26
        }
      },
      "81": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 219,
          column: 5
        }
      },
      "82": {
        start: {
          line: 215,
          column: 6
        },
        end: {
          line: 215,
          column: 54
        }
      },
      "83": {
        start: {
          line: 216,
          column: 6
        },
        end: {
          line: 216,
          column: 75
        }
      },
      "84": {
        start: {
          line: 218,
          column: 6
        },
        end: {
          line: 218,
          column: 101
        }
      },
      "85": {
        start: {
          line: 222,
          column: 2
        },
        end: {
          line: 222,
          column: 59
        }
      },
      "86": {
        start: {
          line: 227,
          column: 0
        },
        end: {
          line: 269,
          column: 2
        }
      },
      "87": {
        start: {
          line: 235,
          column: 2
        },
        end: {
          line: 268,
          column: 3
        }
      },
      "88": {
        start: {
          line: 237,
          column: 27
        },
        end: {
          line: 237,
          column: 41
        }
      },
      "89": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 242,
          column: 5
        }
      },
      "90": {
        start: {
          line: 240,
          column: 6
        },
        end: {
          line: 240,
          column: 24
        }
      },
      "91": {
        start: {
          line: 241,
          column: 6
        },
        end: {
          line: 241,
          column: 48
        }
      },
      "92": {
        start: {
          line: 244,
          column: 22
        },
        end: {
          line: 244,
          column: 35
        }
      },
      "93": {
        start: {
          line: 245,
          column: 19
        },
        end: {
          line: 245,
          column: 31
        }
      },
      "94": {
        start: {
          line: 247,
          column: 25
        },
        end: {
          line: 247,
          column: 66
        }
      },
      "95": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "96": {
        start: {
          line: 250,
          column: 6
        },
        end: {
          line: 250,
          column: 85
        }
      },
      "97": {
        start: {
          line: 253,
          column: 17
        },
        end: {
          line: 257,
          column: 6
        }
      },
      "98": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 259,
          column: 22
        }
      },
      "99": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 261,
          column: 80
        }
      },
      "100": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 81
        }
      },
      "101": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 267,
          column: 61
        }
      },
      "102": {
        start: {
          line: 272,
          column: 0
        },
        end: {
          line: 279,
          column: 2
        }
      },
      "103": {
        start: {
          line: 277,
          column: 17
        },
        end: {
          line: 277,
          column: 80
        }
      },
      "104": {
        start: {
          line: 278,
          column: 1
        },
        end: {
          line: 278,
          column: 43
        }
      },
      "105": {
        start: {
          line: 282,
          column: 0
        },
        end: {
          line: 307,
          column: 2
        }
      },
      "106": {
        start: {
          line: 290,
          column: 1
        },
        end: {
          line: 306,
          column: 2
        }
      },
      "107": {
        start: {
          line: 292,
          column: 17
        },
        end: {
          line: 292,
          column: 60
        }
      },
      "108": {
        start: {
          line: 294,
          column: 19
        },
        end: {
          line: 294,
          column: 31
        }
      },
      "109": {
        start: {
          line: 296,
          column: 23
        },
        end: {
          line: 296,
          column: 34
        }
      },
      "110": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 303,
          column: 5
        }
      },
      "111": {
        start: {
          line: 299,
          column: 6
        },
        end: {
          line: 299,
          column: 51
        }
      },
      "112": {
        start: {
          line: 300,
          column: 6
        },
        end: {
          line: 300,
          column: 35
        }
      },
      "113": {
        start: {
          line: 302,
          column: 6
        },
        end: {
          line: 302,
          column: 98
        }
      },
      "114": {
        start: {
          line: 305,
          column: 2
        },
        end: {
          line: 305,
          column: 59
        }
      },
      "115": {
        start: {
          line: 310,
          column: 0
        },
        end: {
          line: 329,
          column: 2
        }
      },
      "116": {
        start: {
          line: 315,
          column: 25
        },
        end: {
          line: 315,
          column: 48
        }
      },
      "117": {
        start: {
          line: 317,
          column: 2
        },
        end: {
          line: 320,
          column: 3
        }
      },
      "118": {
        start: {
          line: 318,
          column: 4
        },
        end: {
          line: 318,
          column: 22
        }
      },
      "119": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 319,
          column: 46
        }
      },
      "120": {
        start: {
          line: 322,
          column: 35
        },
        end: {
          line: 322,
          column: 43
        }
      },
      "121": {
        start: {
          line: 324,
          column: 15
        },
        end: {
          line: 324,
          column: 52
        }
      },
      "122": {
        start: {
          line: 326,
          column: 1
        },
        end: {
          line: 326,
          column: 19
        }
      },
      "123": {
        start: {
          line: 328,
          column: 1
        },
        end: {
          line: 328,
          column: 72
        }
      },
      "124": {
        start: {
          line: 332,
          column: 0
        },
        end: {
          line: 342,
          column: 2
        }
      },
      "125": {
        start: {
          line: 340,
          column: 17
        },
        end: {
          line: 340,
          column: 35
        }
      },
      "126": {
        start: {
          line: 341,
          column: 1
        },
        end: {
          line: 341,
          column: 37
        }
      },
      "127": {
        start: {
          line: 345,
          column: 0
        },
        end: {
          line: 381,
          column: 3
        }
      },
      "128": {
        start: {
          line: 350,
          column: 2
        },
        end: {
          line: 380,
          column: 3
        }
      },
      "129": {
        start: {
          line: 352,
          column: 27
        },
        end: {
          line: 352,
          column: 51
        }
      },
      "130": {
        start: {
          line: 354,
          column: 4
        },
        end: {
          line: 357,
          column: 5
        }
      },
      "131": {
        start: {
          line: 355,
          column: 6
        },
        end: {
          line: 355,
          column: 24
        }
      },
      "132": {
        start: {
          line: 356,
          column: 6
        },
        end: {
          line: 356,
          column: 48
        }
      },
      "133": {
        start: {
          line: 359,
          column: 55
        },
        end: {
          line: 359,
          column: 63
        }
      },
      "134": {
        start: {
          line: 361,
          column: 20
        },
        end: {
          line: 361,
          column: 50
        }
      },
      "135": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 365,
          column: 5
        }
      },
      "136": {
        start: {
          line: 364,
          column: 6
        },
        end: {
          line: 364,
          column: 70
        }
      },
      "137": {
        start: {
          line: 367,
          column: 30
        },
        end: {
          line: 367,
          column: 61
        }
      },
      "138": {
        start: {
          line: 369,
          column: 17
        },
        end: {
          line: 374,
          column: 6
        }
      },
      "139": {
        start: {
          line: 376,
          column: 4
        },
        end: {
          line: 376,
          column: 75
        }
      },
      "140": {
        start: {
          line: 379,
          column: 4
        },
        end: {
          line: 379,
          column: 21
        }
      },
      "141": {
        start: {
          line: 384,
          column: 0
        },
        end: {
          line: 415,
          column: 3
        }
      },
      "142": {
        start: {
          line: 389,
          column: 2
        },
        end: {
          line: 414,
          column: 3
        }
      },
      "143": {
        start: {
          line: 390,
          column: 32
        },
        end: {
          line: 390,
          column: 40
        }
      },
      "144": {
        start: {
          line: 392,
          column: 28
        },
        end: {
          line: 392,
          column: 51
        }
      },
      "145": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 397,
          column: 5
        }
      },
      "146": {
        start: {
          line: 395,
          column: 6
        },
        end: {
          line: 395,
          column: 24
        }
      },
      "147": {
        start: {
          line: 396,
          column: 6
        },
        end: {
          line: 396,
          column: 102
        }
      },
      "148": {
        start: {
          line: 399,
          column: 17
        },
        end: {
          line: 399,
          column: 47
        }
      },
      "149": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 410,
          column: 5
        }
      },
      "150": {
        start: {
          line: 403,
          column: 20
        },
        end: {
          line: 403,
          column: 79
        }
      },
      "151": {
        start: {
          line: 405,
          column: 6
        },
        end: {
          line: 405,
          column: 25
        }
      },
      "152": {
        start: {
          line: 407,
          column: 6
        },
        end: {
          line: 407,
          column: 74
        }
      },
      "153": {
        start: {
          line: 409,
          column: 6
        },
        end: {
          line: 409,
          column: 81
        }
      },
      "154": {
        start: {
          line: 413,
          column: 4
        },
        end: {
          line: 413,
          column: 58
        }
      },
      "155": {
        start: {
          line: 418,
          column: 0
        },
        end: {
          line: 428,
          column: 2
        }
      },
      "156": {
        start: {
          line: 426,
          column: 15
        },
        end: {
          line: 426,
          column: 33
        }
      },
      "157": {
        start: {
          line: 427,
          column: 1
        },
        end: {
          line: 427,
          column: 35
        }
      },
      "158": {
        start: {
          line: 431,
          column: 0
        },
        end: {
          line: 459,
          column: 2
        }
      },
      "159": {
        start: {
          line: 439,
          column: 1
        },
        end: {
          line: 458,
          column: 2
        }
      },
      "160": {
        start: {
          line: 440,
          column: 16
        },
        end: {
          line: 440,
          column: 59
        }
      },
      "161": {
        start: {
          line: 442,
          column: 2
        },
        end: {
          line: 444,
          column: 3
        }
      },
      "162": {
        start: {
          line: 443,
          column: 3
        },
        end: {
          line: 443,
          column: 41
        }
      },
      "163": {
        start: {
          line: 446,
          column: 2
        },
        end: {
          line: 448,
          column: 3
        }
      },
      "164": {
        start: {
          line: 447,
          column: 3
        },
        end: {
          line: 447,
          column: 39
        }
      },
      "165": {
        start: {
          line: 450,
          column: 4
        },
        end: {
          line: 452,
          column: 3
        }
      },
      "166": {
        start: {
          line: 451,
          column: 3
        },
        end: {
          line: 451,
          column: 31
        }
      },
      "167": {
        start: {
          line: 454,
          column: 2
        },
        end: {
          line: 454,
          column: 20
        }
      },
      "168": {
        start: {
          line: 455,
          column: 2
        },
        end: {
          line: 455,
          column: 89
        }
      },
      "169": {
        start: {
          line: 457,
          column: 2
        },
        end: {
          line: 457,
          column: 52
        }
      },
      "170": {
        start: {
          line: 462,
          column: 0
        },
        end: {
          line: 476,
          column: 2
        }
      },
      "171": {
        start: {
          line: 470,
          column: 1
        },
        end: {
          line: 475,
          column: 2
        }
      },
      "172": {
        start: {
          line: 471,
          column: 2
        },
        end: {
          line: 471,
          column: 47
        }
      },
      "173": {
        start: {
          line: 472,
          column: 2
        },
        end: {
          line: 472,
          column: 75
        }
      },
      "174": {
        start: {
          line: 474,
          column: 2
        },
        end: {
          line: 474,
          column: 58
        }
      },
      "175": {
        start: {
          line: 479,
          column: 0
        },
        end: {
          line: 489,
          column: 2
        }
      },
      "176": {
        start: {
          line: 487,
          column: 14
        },
        end: {
          line: 487,
          column: 31
        }
      },
      "177": {
        start: {
          line: 488,
          column: 1
        },
        end: {
          line: 488,
          column: 34
        }
      },
      "178": {
        start: {
          line: 492,
          column: 0
        },
        end: {
          line: 506,
          column: 2
        }
      },
      "179": {
        start: {
          line: 500,
          column: 1
        },
        end: {
          line: 505,
          column: 2
        }
      },
      "180": {
        start: {
          line: 501,
          column: 2
        },
        end: {
          line: 501,
          column: 46
        }
      },
      "181": {
        start: {
          line: 502,
          column: 2
        },
        end: {
          line: 502,
          column: 69
        }
      },
      "182": {
        start: {
          line: 504,
          column: 2
        },
        end: {
          line: 504,
          column: 52
        }
      },
      "183": {
        start: {
          line: 509,
          column: 0
        },
        end: {
          line: 544,
          column: 3
        }
      },
      "184": {
        start: {
          line: 514,
          column: 2
        },
        end: {
          line: 543,
          column: 3
        }
      },
      "185": {
        start: {
          line: 515,
          column: 55
        },
        end: {
          line: 515,
          column: 63
        }
      },
      "186": {
        start: {
          line: 517,
          column: 27
        },
        end: {
          line: 517,
          column: 51
        }
      },
      "187": {
        start: {
          line: 519,
          column: 4
        },
        end: {
          line: 522,
          column: 5
        }
      },
      "188": {
        start: {
          line: 520,
          column: 6
        },
        end: {
          line: 520,
          column: 24
        }
      },
      "189": {
        start: {
          line: 521,
          column: 6
        },
        end: {
          line: 521,
          column: 48
        }
      },
      "190": {
        start: {
          line: 524,
          column: 20
        },
        end: {
          line: 524,
          column: 49
        }
      },
      "191": {
        start: {
          line: 526,
          column: 4
        },
        end: {
          line: 528,
          column: 5
        }
      },
      "192": {
        start: {
          line: 527,
          column: 6
        },
        end: {
          line: 527,
          column: 70
        }
      },
      "193": {
        start: {
          line: 530,
          column: 30
        },
        end: {
          line: 530,
          column: 61
        }
      },
      "194": {
        start: {
          line: 532,
          column: 17
        },
        end: {
          line: 537,
          column: 6
        }
      },
      "195": {
        start: {
          line: 539,
          column: 4
        },
        end: {
          line: 539,
          column: 76
        }
      },
      "196": {
        start: {
          line: 542,
          column: 4
        },
        end: {
          line: 542,
          column: 21
        }
      },
      "197": {
        start: {
          line: 547,
          column: 0
        },
        end: {
          line: 576,
          column: 3
        }
      },
      "198": {
        start: {
          line: 552,
          column: 2
        },
        end: {
          line: 575,
          column: 3
        }
      },
      "199": {
        start: {
          line: 553,
          column: 32
        },
        end: {
          line: 553,
          column: 40
        }
      },
      "200": {
        start: {
          line: 555,
          column: 28
        },
        end: {
          line: 555,
          column: 51
        }
      },
      "201": {
        start: {
          line: 557,
          column: 4
        },
        end: {
          line: 560,
          column: 5
        }
      },
      "202": {
        start: {
          line: 558,
          column: 6
        },
        end: {
          line: 558,
          column: 24
        }
      },
      "203": {
        start: {
          line: 559,
          column: 6
        },
        end: {
          line: 559,
          column: 102
        }
      },
      "204": {
        start: {
          line: 562,
          column: 17
        },
        end: {
          line: 562,
          column: 46
        }
      },
      "205": {
        start: {
          line: 564,
          column: 4
        },
        end: {
          line: 571,
          column: 5
        }
      },
      "206": {
        start: {
          line: 566,
          column: 20
        },
        end: {
          line: 566,
          column: 79
        }
      },
      "207": {
        start: {
          line: 568,
          column: 6
        },
        end: {
          line: 568,
          column: 25
        }
      },
      "208": {
        start: {
          line: 570,
          column: 6
        },
        end: {
          line: 570,
          column: 74
        }
      },
      "209": {
        start: {
          line: 572,
          column: 4
        },
        end: {
          line: 572,
          column: 79
        }
      },
      "210": {
        start: {
          line: 574,
          column: 4
        },
        end: {
          line: 574,
          column: 21
        }
      },
      "211": {
        start: {
          line: 579,
          column: 0
        },
        end: {
          line: 579,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 16
          }
        },
        loc: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 28,
            column: 3
          }
        },
        line: 26
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        },
        loc: {
          start: {
            line: 29,
            column: 36
          },
          end: {
            line: 31,
            column: 3
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 25
          }
        },
        loc: {
          start: {
            line: 38,
            column: 44
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 38
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 52,
            column: 60
          },
          end: {
            line: 52,
            column: 61
          }
        },
        loc: {
          start: {
            line: 52,
            column: 80
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 52
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 85,
            column: 28
          },
          end: {
            line: 85,
            column: 29
          }
        },
        loc: {
          start: {
            line: 85,
            column: 48
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 85
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 95,
            column: 41
          },
          end: {
            line: 95,
            column: 42
          }
        },
        loc: {
          start: {
            line: 95,
            column: 61
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 95
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 126,
            column: 42
          },
          end: {
            line: 126,
            column: 43
          }
        },
        loc: {
          start: {
            line: 126,
            column: 62
          },
          end: {
            line: 140,
            column: 1
          }
        },
        line: 126
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 143,
            column: 47
          },
          end: {
            line: 143,
            column: 48
          }
        },
        loc: {
          start: {
            line: 143,
            column: 67
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 143
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 183,
            column: 37
          },
          end: {
            line: 183,
            column: 38
          }
        },
        loc: {
          start: {
            line: 183,
            column: 57
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 183
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 196,
            column: 56
          },
          end: {
            line: 196,
            column: 57
          }
        },
        loc: {
          start: {
            line: 196,
            column: 76
          },
          end: {
            line: 224,
            column: 1
          }
        },
        line: 196
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 227,
            column: 44
          },
          end: {
            line: 227,
            column: 45
          }
        },
        loc: {
          start: {
            line: 227,
            column: 64
          },
          end: {
            line: 269,
            column: 1
          }
        },
        line: 227
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 272,
            column: 34
          },
          end: {
            line: 272,
            column: 35
          }
        },
        loc: {
          start: {
            line: 272,
            column: 54
          },
          end: {
            line: 279,
            column: 1
          }
        },
        line: 272
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 282,
            column: 53
          },
          end: {
            line: 282,
            column: 54
          }
        },
        loc: {
          start: {
            line: 282,
            column: 73
          },
          end: {
            line: 307,
            column: 1
          }
        },
        line: 282
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 310,
            column: 24
          },
          end: {
            line: 310,
            column: 25
          }
        },
        loc: {
          start: {
            line: 310,
            column: 44
          },
          end: {
            line: 329,
            column: 1
          }
        },
        line: 310
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 332,
            column: 33
          },
          end: {
            line: 332,
            column: 34
          }
        },
        loc: {
          start: {
            line: 332,
            column: 53
          },
          end: {
            line: 342,
            column: 1
          }
        },
        line: 332
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 345,
            column: 34
          },
          end: {
            line: 345,
            column: 35
          }
        },
        loc: {
          start: {
            line: 345,
            column: 54
          },
          end: {
            line: 381,
            column: 1
          }
        },
        line: 345
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 384,
            column: 33
          },
          end: {
            line: 384,
            column: 34
          }
        },
        loc: {
          start: {
            line: 384,
            column: 53
          },
          end: {
            line: 415,
            column: 1
          }
        },
        line: 384
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 418,
            column: 36
          },
          end: {
            line: 418,
            column: 37
          }
        },
        loc: {
          start: {
            line: 418,
            column: 56
          },
          end: {
            line: 428,
            column: 1
          }
        },
        line: 418
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 431,
            column: 43
          },
          end: {
            line: 431,
            column: 44
          }
        },
        loc: {
          start: {
            line: 431,
            column: 63
          },
          end: {
            line: 459,
            column: 1
          }
        },
        line: 431
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 462,
            column: 44
          },
          end: {
            line: 462,
            column: 45
          }
        },
        loc: {
          start: {
            line: 462,
            column: 64
          },
          end: {
            line: 476,
            column: 1
          }
        },
        line: 462
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 479,
            column: 37
          },
          end: {
            line: 479,
            column: 38
          }
        },
        loc: {
          start: {
            line: 479,
            column: 57
          },
          end: {
            line: 489,
            column: 1
          }
        },
        line: 479
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 492,
            column: 45
          },
          end: {
            line: 492,
            column: 46
          }
        },
        loc: {
          start: {
            line: 492,
            column: 65
          },
          end: {
            line: 506,
            column: 1
          }
        },
        line: 492
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 509,
            column: 35
          },
          end: {
            line: 509,
            column: 36
          }
        },
        loc: {
          start: {
            line: 509,
            column: 55
          },
          end: {
            line: 544,
            column: 1
          }
        },
        line: 509
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 547,
            column: 34
          },
          end: {
            line: 547,
            column: 35
          }
        },
        loc: {
          start: {
            line: 547,
            column: 54
          },
          end: {
            line: 576,
            column: 1
          }
        },
        line: 547
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "1": {
        loc: {
          start: {
            line: 71,
            column: 13
          },
          end: {
            line: 71,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 24
          },
          end: {
            line: 71,
            column: 41
          }
        }, {
          start: {
            line: 71,
            column: 44
          },
          end: {
            line: 71,
            column: 53
          }
        }],
        line: 71
      },
      "2": {
        loc: {
          start: {
            line: 106,
            column: 2
          },
          end: {
            line: 108,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 2
          },
          end: {
            line: 108,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "3": {
        loc: {
          start: {
            line: 110,
            column: 2
          },
          end: {
            line: 112,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 2
          },
          end: {
            line: 112,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "4": {
        loc: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 116,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 116,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "5": {
        loc: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "6": {
        loc: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        }, {
          start: {
            line: 217,
            column: 11
          },
          end: {
            line: 219,
            column: 5
          }
        }],
        line: 214
      },
      "7": {
        loc: {
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "8": {
        loc: {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "9": {
        loc: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        }, {
          start: {
            line: 301,
            column: 11
          },
          end: {
            line: 303,
            column: 5
          }
        }],
        line: 298
      },
      "10": {
        loc: {
          start: {
            line: 317,
            column: 2
          },
          end: {
            line: 320,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 2
          },
          end: {
            line: 320,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "11": {
        loc: {
          start: {
            line: 354,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 354
      },
      "12": {
        loc: {
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 365,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 365,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 363
      },
      "13": {
        loc: {
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 394
      },
      "14": {
        loc: {
          start: {
            line: 394,
            column: 10
          },
          end: {
            line: 394,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 394,
            column: 10
          },
          end: {
            line: 394,
            column: 15
          }
        }, {
          start: {
            line: 394,
            column: 19
          },
          end: {
            line: 394,
            column: 27
          }
        }],
        line: 394
      },
      "15": {
        loc: {
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 410,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 410,
            column: 5
          }
        }, {
          start: {
            line: 408,
            column: 11
          },
          end: {
            line: 410,
            column: 5
          }
        }],
        line: 401
      },
      "16": {
        loc: {
          start: {
            line: 401,
            column: 8
          },
          end: {
            line: 401,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 401,
            column: 8
          },
          end: {
            line: 401,
            column: 12
          }
        }, {
          start: {
            line: 401,
            column: 17
          },
          end: {
            line: 401,
            column: 62
          }
        }],
        line: 401
      },
      "17": {
        loc: {
          start: {
            line: 442,
            column: 2
          },
          end: {
            line: 444,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 2
          },
          end: {
            line: 444,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "18": {
        loc: {
          start: {
            line: 446,
            column: 2
          },
          end: {
            line: 448,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 446,
            column: 2
          },
          end: {
            line: 448,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 446
      },
      "19": {
        loc: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 452,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 452,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "20": {
        loc: {
          start: {
            line: 519,
            column: 4
          },
          end: {
            line: 522,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 519,
            column: 4
          },
          end: {
            line: 522,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 519
      },
      "21": {
        loc: {
          start: {
            line: 526,
            column: 4
          },
          end: {
            line: 528,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 526,
            column: 4
          },
          end: {
            line: 528,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 526
      },
      "22": {
        loc: {
          start: {
            line: 557,
            column: 4
          },
          end: {
            line: 560,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 557,
            column: 4
          },
          end: {
            line: 560,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 557
      },
      "23": {
        loc: {
          start: {
            line: 557,
            column: 10
          },
          end: {
            line: 557,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 557,
            column: 10
          },
          end: {
            line: 557,
            column: 15
          }
        }, {
          start: {
            line: 557,
            column: 19
          },
          end: {
            line: 557,
            column: 27
          }
        }],
        line: 557
      },
      "24": {
        loc: {
          start: {
            line: 564,
            column: 4
          },
          end: {
            line: 571,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 564,
            column: 4
          },
          end: {
            line: 571,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 564
      },
      "25": {
        loc: {
          start: {
            line: 564,
            column: 8
          },
          end: {
            line: 564,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 564,
            column: 8
          },
          end: {
            line: 564,
            column: 12
          }
        }, {
          start: {
            line: 564,
            column: 17
          },
          end: {
            line: 564,
            column: 62
          }
        }],
        line: 564
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f00a2c65d2ec625d9f7a5475729fa122306c8126"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qshf54gp7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qshf54gp7();
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
var express = (cov_1qshf54gp7().s[0]++, require("express"));
var jsonwebtoken = (cov_1qshf54gp7().s[1]++, require("jsonwebtoken"));
var bcrypt = (cov_1qshf54gp7().s[2]++, require("bcryptjs"));
var Joi = (cov_1qshf54gp7().s[3]++, require("joi"));
var multer = (cov_1qshf54gp7().s[4]++, require('multer'));
var swaggerUI = (cov_1qshf54gp7().s[5]++, require("swagger-ui-express"));
var swaggerJsDoc = (cov_1qshf54gp7().s[6]++, require("swagger-jsdoc"));
var router = (cov_1qshf54gp7().s[7]++, express.Router());
var Article = (cov_1qshf54gp7().s[8]++, require("./models/articleModel"));
var Like = (cov_1qshf54gp7().s[9]++, require("./models/likeModel"));
var Comment = (cov_1qshf54gp7().s[10]++, require("./models/commentModel"));
var Query = (cov_1qshf54gp7().s[11]++, require("./models/queryModel"));
var Admin = (cov_1qshf54gp7().s[12]++, require("./models/adminModel"));
var User = (cov_1qshf54gp7().s[13]++, require("./models/userModel"));
var adminAuth = (cov_1qshf54gp7().s[14]++, require("./middleware/auth"));
var userAuth = (cov_1qshf54gp7().s[15]++, require("./middleware/cAuth"));
var _ref = (cov_1qshf54gp7().s[16]++, require("./middleware/validator")),
  validateSignUp = _ref.validateSignUp,
  validateLogIn = _ref.validateLogIn,
  validateArticle = _ref.validateArticle,
  validateComment = _ref.validateComment,
  validateQuery = _ref.validateQuery,
  validateLike = _ref.validateLike;
var JWT_SECRET = (cov_1qshf54gp7().s[17]++, "goK!pusp6ThEdURUtRenOwUhAsWUCLheBazl!uJLPlS8EbreWLdrupIwabRAsiBu");
var storage = (cov_1qshf54gp7().s[18]++, multer.diskStorage({
  destination: function destination(req, file, cb) {
    cov_1qshf54gp7().f[0]++;
    cov_1qshf54gp7().s[19]++;
    cb(null, 'uploads/');
  },
  filename: function filename(req, file, cb) {
    cov_1qshf54gp7().f[1]++;
    cov_1qshf54gp7().s[20]++;
    cb(null, new Date().toISOString() + file.originalname);
  }
}));
var upload = (cov_1qshf54gp7().s[21]++, multer({
  storage: storage
}));

// Get all articles
cov_1qshf54gp7().s[22]++;
router.get("/articles", /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {
    var articles;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          cov_1qshf54gp7().f[2]++;
          cov_1qshf54gp7().s[23]++;
          _context.prev = 2;
          cov_1qshf54gp7().s[24]++;
          _context.next = 6;
          return Article.find();
        case 6:
          articles = _context.sent;
          cov_1qshf54gp7().s[25]++;
          return _context.abrupt("return", res.status(200).send(articles));
        case 11:
          _context.prev = 11;
          _context.t0 = _context["catch"](2);
          cov_1qshf54gp7().s[26]++;
          res.status(404).send({
            error: "Articles not found!"
          });
        case 15:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[2, 11]]);
  }));
  return function (_x, _x2) {
    return _ref2.apply(this, arguments);
  };
}());

// Create an article
cov_1qshf54gp7().s[27]++;
router.post("/articles", adminAuth, upload.single('image'), /*#__PURE__*/function () {
  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {
    var _ref4, error, value, userId, article;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          cov_1qshf54gp7().f[3]++;
          cov_1qshf54gp7().s[28]++;
          _context2.prev = 2;
          _ref4 = (cov_1qshf54gp7().s[29]++, validateArticle(req.body)), error = _ref4.error, value = _ref4.value;
          cov_1qshf54gp7().s[30]++;
          if (!error) {
            _context2.next = 11;
            break;
          }
          cov_1qshf54gp7().b[0][0]++;
          cov_1qshf54gp7().s[31]++;
          return _context2.abrupt("return", res.status(400).send(error.details));
        case 11:
          cov_1qshf54gp7().b[0][1]++;
        case 12:
          userId = (cov_1qshf54gp7().s[32]++, req.user._id);
          cov_1qshf54gp7().s[33]++;
          console.log(userId);
          article = (cov_1qshf54gp7().s[34]++, new Article({
            title: req.body.title,
            image: req.file ? (cov_1qshf54gp7().b[1][0]++, req.file.filename) : (cov_1qshf54gp7().b[1][1]++, undefined),
            content: req.body.content,
            authorId: userId
          }));
          cov_1qshf54gp7().s[35]++;
          _context2.next = 19;
          return article.save();
        case 19:
          cov_1qshf54gp7().s[36]++;
          return _context2.abrupt("return", res.status(200).send({
            message: "Article added successfuly",
            article: article
          }));
        case 23:
          _context2.prev = 23;
          _context2.t0 = _context2["catch"](2);
          cov_1qshf54gp7().s[37]++;
          console.log(req.user);
          cov_1qshf54gp7().s[38]++;
          res.status(500).json({
            error: "Unsuccessfull request!"
          });
        case 29:
        case "end":
          return _context2.stop();
      }
    }, _callee2, null, [[2, 23]]);
  }));
  return function (_x3, _x4) {
    return _ref3.apply(this, arguments);
  };
}());

// Get individual article
cov_1qshf54gp7().s[39]++;
router.get("/articles/:id", /*#__PURE__*/function () {
  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {
    var article;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          cov_1qshf54gp7().f[4]++;
          cov_1qshf54gp7().s[40]++;
          _context3.next = 4;
          return Article.findOne({
            _id: req.params.id
          }).populate('likes').populate('comments');
        case 4:
          article = _context3.sent;
          cov_1qshf54gp7().s[41]++;
          return _context3.abrupt("return", res.status(200).send(article));
        case 7:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return function (_x5, _x6) {
    return _ref5.apply(this, arguments);
  };
}());

// Update an article
cov_1qshf54gp7().s[42]++;
router.patch("/articles/:id", adminAuth, /*#__PURE__*/function () {
  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {
    var article;
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          cov_1qshf54gp7().f[5]++;
          cov_1qshf54gp7().s[43]++;
          _context4.prev = 2;
          cov_1qshf54gp7().s[44]++;
          _context4.next = 6;
          return Article.findOne({
            _id: req.params.id
          });
        case 6:
          article = _context4.sent;
          cov_1qshf54gp7().s[45]++;
          if (req.body.title) {
            cov_1qshf54gp7().b[2][0]++;
            cov_1qshf54gp7().s[46]++;
            article.title = req.body.title;
          } else {
            cov_1qshf54gp7().b[2][1]++;
          }
          cov_1qshf54gp7().s[47]++;
          if (req.body.content) {
            cov_1qshf54gp7().b[3][0]++;
            cov_1qshf54gp7().s[48]++;
            article.content = req.body.content;
          } else {
            cov_1qshf54gp7().b[3][1]++;
          }
          cov_1qshf54gp7().s[49]++;
          if (req.body.image) {
            cov_1qshf54gp7().b[4][0]++;
            cov_1qshf54gp7().s[50]++;
            article.image = req.body.image;
          } else {
            cov_1qshf54gp7().b[4][1]++;
          }
          cov_1qshf54gp7().s[51]++;
          _context4.next = 16;
          return article.save();
        case 16:
          cov_1qshf54gp7().s[52]++;
          return _context4.abrupt("return", res.status(200).send(article));
        case 20:
          _context4.prev = 20;
          _context4.t0 = _context4["catch"](2);
          cov_1qshf54gp7().s[53]++;
          res.status(404).send({
            error: "Article doesn't exist!"
          });
        case 24:
        case "end":
          return _context4.stop();
      }
    }, _callee4, null, [[2, 20]]);
  }));
  return function (_x7, _x8) {
    return _ref6.apply(this, arguments);
  };
}());

// Deleting an article
cov_1qshf54gp7().s[54]++;
router["delete"]("/articles/:id", adminAuth, /*#__PURE__*/function () {
  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {
    var article;
    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          cov_1qshf54gp7().f[6]++;
          cov_1qshf54gp7().s[55]++;
          _context5.prev = 2;
          cov_1qshf54gp7().s[56]++;
          _context5.next = 6;
          return Article.deleteOne({
            _id: req.params.id
          });
        case 6:
          article = _context5.sent;
          cov_1qshf54gp7().s[57]++;
          return _context5.abrupt("return", res.status(200).send({
            message: "Article deleted successfuly"
          }));
        case 11:
          _context5.prev = 11;
          _context5.t0 = _context5["catch"](2);
          cov_1qshf54gp7().s[58]++;
          res.status(404).send({
            error: "Article doesn't exist!"
          });
        case 15:
        case "end":
          return _context5.stop();
      }
    }, _callee5, null, [[2, 11]]);
  }));
  return function (_x9, _x10) {
    return _ref7.apply(this, arguments);
  };
}());

// Adding a comment to an article
cov_1qshf54gp7().s[59]++;
router.post("/articles/:id/comments", userAuth, /*#__PURE__*/function () {
  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(req, res) {
    var _ref9, error, value, userId, comment, savedComment, article;
    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) switch (_context6.prev = _context6.next) {
        case 0:
          cov_1qshf54gp7().f[7]++;
          cov_1qshf54gp7().s[60]++;
          _context6.prev = 2;
          _ref9 = (cov_1qshf54gp7().s[61]++, validateComment(req.body)), error = _ref9.error, value = _ref9.value;
          cov_1qshf54gp7().s[62]++;
          if (!error) {
            _context6.next = 13;
            break;
          }
          cov_1qshf54gp7().b[5][0]++;
          cov_1qshf54gp7().s[63]++;
          console.log(error);
          cov_1qshf54gp7().s[64]++;
          return _context6.abrupt("return", res.status(400).send(error.details));
        case 13:
          cov_1qshf54gp7().b[5][1]++;
        case 14:
          userId = (cov_1qshf54gp7().s[65]++, req.user._id);
          comment = (cov_1qshf54gp7().s[66]++, new Comment({
            articleId: req.params.id,
            userId: userId,
            comment: req.body.comment
          }));
          cov_1qshf54gp7().s[67]++;
          _context6.next = 19;
          return comment.save();
        case 19:
          savedComment = _context6.sent;
          cov_1qshf54gp7().s[68]++;
          _context6.next = 23;
          return Article.findByIdAndUpdate(req.params.id, {
            $push: {
              comments: savedComment._id
            }
          }
          // { new: true },
          ).populate('comments');
        case 23:
          article = _context6.sent;
          cov_1qshf54gp7().s[69]++;
          return _context6.abrupt("return", res.status(201).send({
            message: "Comment added successfuly",
            comment: comment
          }));
        case 28:
          _context6.prev = 28;
          _context6.t0 = _context6["catch"](2);
          cov_1qshf54gp7().s[70]++;
          res.status(400).send({
            error: "failed to add comment!"
          });
        case 32:
        case "end":
          return _context6.stop();
      }
    }, _callee6, null, [[2, 28]]);
  }));
  return function (_x11, _x12) {
    return _ref8.apply(this, arguments);
  };
}());

// Get all article comments
cov_1qshf54gp7().s[71]++;
router.get("/articles/:id/comments", /*#__PURE__*/function () {
  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(req, res) {
    var article;
    return _regeneratorRuntime().wrap(function _callee7$(_context7) {
      while (1) switch (_context7.prev = _context7.next) {
        case 0:
          cov_1qshf54gp7().f[8]++;
          cov_1qshf54gp7().s[72]++;
          _context7.next = 4;
          return Article.findOne({
            _id: req.params.id
          }).populate('comments');
        case 4:
          article = _context7.sent;
          cov_1qshf54gp7().s[73]++;
          return _context7.abrupt("return", res.status(200).send(article.comments));
        case 7:
        case "end":
          return _context7.stop();
      }
    }, _callee7);
  }));
  return function (_x13, _x14) {
    return _ref10.apply(this, arguments);
  };
}());

// Delete a comment
cov_1qshf54gp7().s[74]++;
router["delete"]("/articles/:id1/comments/:id2", userAuth, /*#__PURE__*/function () {
  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res) {
    var userId, comment, comAuthor;
    return _regeneratorRuntime().wrap(function _callee8$(_context8) {
      while (1) switch (_context8.prev = _context8.next) {
        case 0:
          cov_1qshf54gp7().f[9]++;
          cov_1qshf54gp7().s[75]++;
          _context8.prev = 2;
          userId = (cov_1qshf54gp7().s[76]++, req.user._id);
          cov_1qshf54gp7().s[77]++;
          console.log(userId);
          cov_1qshf54gp7().s[78]++;
          _context8.next = 9;
          return Comment.findOne({
            _id: req.params.id2
          });
        case 9:
          comment = _context8.sent;
          comAuthor = (cov_1qshf54gp7().s[79]++, comment.userId);
          cov_1qshf54gp7().s[80]++;
          console.log(comAuthor);
          cov_1qshf54gp7().s[81]++;
          if (!(userId.toString === comAuthor.toString)) {
            _context8.next = 23;
            break;
          }
          cov_1qshf54gp7().b[6][0]++;
          cov_1qshf54gp7().s[82]++;
          _context8.next = 19;
          return Comment.deleteOne({
            _id: req.params.id2
          });
        case 19:
          cov_1qshf54gp7().s[83]++;
          return _context8.abrupt("return", res.status(200).send({
            message: "comment deleted successfuly"
          }));
        case 23:
          cov_1qshf54gp7().b[6][1]++;
          cov_1qshf54gp7().s[84]++;
          return _context8.abrupt("return", res.status(403).send({
            error: "You do not have the permissions to delete this comment!"
          }));
        case 26:
          _context8.next = 32;
          break;
        case 28:
          _context8.prev = 28;
          _context8.t0 = _context8["catch"](2);
          cov_1qshf54gp7().s[85]++;
          res.status(404).send({
            error: "Article doesn't exist!"
          });
        case 32:
        case "end":
          return _context8.stop();
      }
    }, _callee8, null, [[2, 28]]);
  }));
  return function (_x15, _x16) {
    return _ref11.apply(this, arguments);
  };
}());

// Adding a like to an article
cov_1qshf54gp7().s[86]++;
router.post("/articles/:id/likes", userAuth, /*#__PURE__*/function () {
  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(req, res) {
    var _ref13, error, value, articleId, userId, existingLike, like;
    return _regeneratorRuntime().wrap(function _callee9$(_context9) {
      while (1) switch (_context9.prev = _context9.next) {
        case 0:
          cov_1qshf54gp7().f[10]++;
          cov_1qshf54gp7().s[87]++;
          _context9.prev = 2;
          _ref13 = (cov_1qshf54gp7().s[88]++, validateLike()), error = _ref13.error, value = _ref13.value;
          cov_1qshf54gp7().s[89]++;
          if (!error) {
            _context9.next = 13;
            break;
          }
          cov_1qshf54gp7().b[7][0]++;
          cov_1qshf54gp7().s[90]++;
          console.log(error);
          cov_1qshf54gp7().s[91]++;
          return _context9.abrupt("return", res.status(400).send(error.details));
        case 13:
          cov_1qshf54gp7().b[7][1]++;
        case 14:
          articleId = (cov_1qshf54gp7().s[92]++, req.params.id);
          userId = (cov_1qshf54gp7().s[93]++, req.user._id);
          cov_1qshf54gp7().s[94]++;
          _context9.next = 19;
          return Like.findOne({
            articleId: articleId,
            userId: userId
          });
        case 19:
          existingLike = _context9.sent;
          cov_1qshf54gp7().s[95]++;
          if (!existingLike) {
            _context9.next = 27;
            break;
          }
          cov_1qshf54gp7().b[8][0]++;
          cov_1qshf54gp7().s[96]++;
          return _context9.abrupt("return", res.status(400).json({
            error: 'You have already liked this article!'
          }));
        case 27:
          cov_1qshf54gp7().b[8][1]++;
        case 28:
          like = (cov_1qshf54gp7().s[97]++, new Like({
            articleId: articleId,
            userId: userId,
            like: true
          }));
          cov_1qshf54gp7().s[98]++;
          _context9.next = 32;
          return like.save();
        case 32:
          cov_1qshf54gp7().s[99]++;
          _context9.next = 35;
          return Article.updateOne({
            _id: articleId
          }, {
            $push: {
              likes: like._id
            }
          });
        case 35:
          cov_1qshf54gp7().s[100]++;
          return _context9.abrupt("return", res.status(201).json({
            message: 'Article liked successfully',
            like: like
          }));
        case 39:
          _context9.prev = 39;
          _context9.t0 = _context9["catch"](2);
          cov_1qshf54gp7().s[101]++;
          res.status(404).send({
            error: "Article doesn't exist!"
          });
        case 43:
        case "end":
          return _context9.stop();
      }
    }, _callee9, null, [[2, 39]]);
  }));
  return function (_x17, _x18) {
    return _ref12.apply(this, arguments);
  };
}());

// Get all article likes
cov_1qshf54gp7().s[102]++;
router.get("/articles/:id/likes", /*#__PURE__*/function () {
  var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(req, res) {
    var article;
    return _regeneratorRuntime().wrap(function _callee10$(_context10) {
      while (1) switch (_context10.prev = _context10.next) {
        case 0:
          cov_1qshf54gp7().f[11]++;
          cov_1qshf54gp7().s[103]++;
          _context10.next = 4;
          return Article.findOne({
            _id: req.params.id
          }).populate('likes');
        case 4:
          article = _context10.sent;
          cov_1qshf54gp7().s[104]++;
          return _context10.abrupt("return", res.status(200).send(article.likes));
        case 7:
        case "end":
          return _context10.stop();
      }
    }, _callee10);
  }));
  return function (_x19, _x20) {
    return _ref14.apply(this, arguments);
  };
}());

// Delete a like
cov_1qshf54gp7().s[105]++;
router["delete"]("/articles/:id1/likes/:id2", userAuth, /*#__PURE__*/function () {
  var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(req, res) {
    var like, userId, likeAuthor;
    return _regeneratorRuntime().wrap(function _callee11$(_context11) {
      while (1) switch (_context11.prev = _context11.next) {
        case 0:
          cov_1qshf54gp7().f[12]++;
          cov_1qshf54gp7().s[106]++;
          _context11.prev = 2;
          cov_1qshf54gp7().s[107]++;
          _context11.next = 6;
          return Like.findOne({
            _id: req.params.id2
          });
        case 6:
          like = _context11.sent;
          userId = (cov_1qshf54gp7().s[108]++, req.user._id);
          likeAuthor = (cov_1qshf54gp7().s[109]++, like.userId);
          cov_1qshf54gp7().s[110]++;
          if (!(userId === likeAuthor)) {
            _context11.next = 19;
            break;
          }
          cov_1qshf54gp7().b[9][0]++;
          cov_1qshf54gp7().s[111]++;
          _context11.next = 15;
          return Like.deleteOne({
            _id: req.params.id2
          });
        case 15:
          cov_1qshf54gp7().s[112]++;
          return _context11.abrupt("return", res.status(204).send());
        case 19:
          cov_1qshf54gp7().b[9][1]++;
          cov_1qshf54gp7().s[113]++;
          return _context11.abrupt("return", res.status(403).send({
            error: "You do not have the permissions to remove this like!"
          }));
        case 22:
          _context11.next = 28;
          break;
        case 24:
          _context11.prev = 24;
          _context11.t0 = _context11["catch"](2);
          cov_1qshf54gp7().s[114]++;
          res.status(404).send({
            error: "Article doesn't exist!"
          });
        case 28:
        case "end":
          return _context11.stop();
      }
    }, _callee11, null, [[2, 24]]);
  }));
  return function (_x21, _x22) {
    return _ref15.apply(this, arguments);
  };
}());

// Create a Query
cov_1qshf54gp7().s[115]++;
router.post("/queries", /*#__PURE__*/function () {
  var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(req, res) {
    var _ref17, error, value, _ref18, name, email, message, query;
    return _regeneratorRuntime().wrap(function _callee12$(_context12) {
      while (1) switch (_context12.prev = _context12.next) {
        case 0:
          cov_1qshf54gp7().f[13]++;
          // #swagger.tags = ['Articles']
          // #swagger.description = 'create a query'
          // #swagger.summary = 'create a query'
          _ref17 = (cov_1qshf54gp7().s[116]++, validateQuery(req.body)), error = _ref17.error, value = _ref17.value;
          cov_1qshf54gp7().s[117]++;
          if (!error) {
            _context12.next = 11;
            break;
          }
          cov_1qshf54gp7().b[10][0]++;
          cov_1qshf54gp7().s[118]++;
          console.log(error);
          cov_1qshf54gp7().s[119]++;
          return _context12.abrupt("return", res.status(400).send(error.details));
        case 11:
          cov_1qshf54gp7().b[10][1]++;
        case 12:
          _ref18 = (cov_1qshf54gp7().s[120]++, req.body), name = _ref18.name, email = _ref18.email, message = _ref18.message;
          query = (cov_1qshf54gp7().s[121]++, new Query({
            name: name,
            email: email,
            message: message
          }));
          cov_1qshf54gp7().s[122]++;
          _context12.next = 17;
          return query.save();
        case 17:
          cov_1qshf54gp7().s[123]++;
          return _context12.abrupt("return", res.status(201).send({
            message: "Query sent successfuly",
            query: query
          }));
        case 19:
        case "end":
          return _context12.stop();
      }
    }, _callee12);
  }));
  return function (_x23, _x24) {
    return _ref16.apply(this, arguments);
  };
}());

// Get all queries
cov_1qshf54gp7().s[124]++;
router.get("/queries", adminAuth, /*#__PURE__*/function () {
  var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(req, res) {
    var queries;
    return _regeneratorRuntime().wrap(function _callee13$(_context13) {
      while (1) switch (_context13.prev = _context13.next) {
        case 0:
          cov_1qshf54gp7().f[14]++;
          cov_1qshf54gp7().s[125]++;
          _context13.next = 4;
          return Query.find();
        case 4:
          queries = _context13.sent;
          cov_1qshf54gp7().s[126]++;
          return _context13.abrupt("return", res.status(200).send(queries));
        case 7:
        case "end":
          return _context13.stop();
      }
    }, _callee13);
  }));
  return function (_x25, _x26) {
    return _ref19.apply(this, arguments);
  };
}());

// Add new admin user
cov_1qshf54gp7().s[127]++;
router.post("/user/admin/signup", /*#__PURE__*/function () {
  var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(req, res) {
    var _ref21, error, value, _ref22, first_name, last_name, email, password, oldUser, encryptedPassword, user;
    return _regeneratorRuntime().wrap(function _callee14$(_context14) {
      while (1) switch (_context14.prev = _context14.next) {
        case 0:
          cov_1qshf54gp7().f[15]++;
          cov_1qshf54gp7().s[128]++;
          _context14.prev = 2;
          _ref21 = (cov_1qshf54gp7().s[129]++, validateSignUp(req.body)), error = _ref21.error, value = _ref21.value;
          cov_1qshf54gp7().s[130]++;
          if (!error) {
            _context14.next = 13;
            break;
          }
          cov_1qshf54gp7().b[11][0]++;
          cov_1qshf54gp7().s[131]++;
          console.log(error);
          cov_1qshf54gp7().s[132]++;
          return _context14.abrupt("return", res.status(400).send(error.details));
        case 13:
          cov_1qshf54gp7().b[11][1]++;
        case 14:
          _ref22 = (cov_1qshf54gp7().s[133]++, req.body), first_name = _ref22.first_name, last_name = _ref22.last_name, email = _ref22.email, password = _ref22.password;
          cov_1qshf54gp7().s[134]++;
          _context14.next = 18;
          return Admin.findOne({
            email: email
          });
        case 18:
          oldUser = _context14.sent;
          cov_1qshf54gp7().s[135]++;
          if (!oldUser) {
            _context14.next = 26;
            break;
          }
          cov_1qshf54gp7().b[12][0]++;
          cov_1qshf54gp7().s[136]++;
          return _context14.abrupt("return", res.status(409).send("User Already Exist. Please Login"));
        case 26:
          cov_1qshf54gp7().b[12][1]++;
        case 27:
          cov_1qshf54gp7().s[137]++;
          _context14.next = 30;
          return bcrypt.hash(password, 10);
        case 30:
          encryptedPassword = _context14.sent;
          cov_1qshf54gp7().s[138]++;
          _context14.next = 34;
          return Admin.create({
            first_name: first_name,
            last_name: last_name,
            email: email.toLowerCase(),
            password: encryptedPassword
          });
        case 34:
          user = _context14.sent;
          cov_1qshf54gp7().s[139]++;
          return _context14.abrupt("return", res.status(201).send({
            message: "Admin added successfully",
            user: user
          }));
        case 39:
          _context14.prev = 39;
          _context14.t0 = _context14["catch"](2);
          cov_1qshf54gp7().s[140]++;
          console.log(_context14.t0);
        case 43:
        case "end":
          return _context14.stop();
      }
    }, _callee14, null, [[2, 39]]);
  }));
  return function (_x27, _x28) {
    return _ref20.apply(this, arguments);
  };
}());

// Admin login
cov_1qshf54gp7().s[141]++;
router.post("/user/admin/login", /*#__PURE__*/function () {
  var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(req, res) {
    var _ref24, email, password, _ref25, error, value, user, token;
    return _regeneratorRuntime().wrap(function _callee15$(_context15) {
      while (1) switch (_context15.prev = _context15.next) {
        case 0:
          cov_1qshf54gp7().f[16]++;
          cov_1qshf54gp7().s[142]++;
          _context15.prev = 2;
          _ref24 = (cov_1qshf54gp7().s[143]++, req.body), email = _ref24.email, password = _ref24.password;
          _ref25 = (cov_1qshf54gp7().s[144]++, validateLogIn(req.body)), error = _ref25.error, value = _ref25.value;
          cov_1qshf54gp7().s[145]++;
          if ((cov_1qshf54gp7().b[14][0]++, email) && (cov_1qshf54gp7().b[14][1]++, password)) {
            _context15.next = 14;
            break;
          }
          cov_1qshf54gp7().b[13][0]++;
          cov_1qshf54gp7().s[146]++;
          console.log(error);
          cov_1qshf54gp7().s[147]++;
          return _context15.abrupt("return", res.status(400).send({
            message: 'Email and password are required',
            error: error.details
          }));
        case 14:
          cov_1qshf54gp7().b[13][1]++;
        case 15:
          cov_1qshf54gp7().s[148]++;
          _context15.next = 18;
          return Admin.findOne({
            email: email
          });
        case 18:
          user = _context15.sent;
          cov_1qshf54gp7().s[149]++;
          _context15.t0 = (cov_1qshf54gp7().b[16][0]++, user);
          if (!_context15.t0) {
            _context15.next = 26;
            break;
          }
          cov_1qshf54gp7().b[16][1]++;
          _context15.next = 25;
          return bcrypt.compare(password, user.password);
        case 25:
          _context15.t0 = _context15.sent;
        case 26:
          if (!_context15.t0) {
            _context15.next = 35;
            break;
          }
          cov_1qshf54gp7().b[15][0]++;
          token = (cov_1qshf54gp7().s[150]++, jsonwebtoken.sign({
            user_id: user._id,
            email: email
          }, JWT_SECRET));
          cov_1qshf54gp7().s[151]++;
          user.token = token;
          cov_1qshf54gp7().s[152]++;
          return _context15.abrupt("return", res.status(200).send({
            message: 'Login successful',
            token: token
          }));
        case 35:
          cov_1qshf54gp7().b[15][1]++;
          cov_1qshf54gp7().s[153]++;
          return _context15.abrupt("return", res.status(401).send({
            message: 'Email or password is incorrect'
          }));
        case 38:
          _context15.next = 44;
          break;
        case 40:
          _context15.prev = 40;
          _context15.t1 = _context15["catch"](2);
          cov_1qshf54gp7().s[154]++;
          res.status(500).send({
            error: "login request failed!"
          });
        case 44:
        case "end":
          return _context15.stop();
      }
    }, _callee15, null, [[2, 40]]);
  }));
  return function (_x29, _x30) {
    return _ref23.apply(this, arguments);
  };
}());

// Get all admin users
cov_1qshf54gp7().s[155]++;
router.get("/user/admin", adminAuth, /*#__PURE__*/function () {
  var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(req, res) {
    var admin;
    return _regeneratorRuntime().wrap(function _callee16$(_context16) {
      while (1) switch (_context16.prev = _context16.next) {
        case 0:
          cov_1qshf54gp7().f[17]++;
          cov_1qshf54gp7().s[156]++;
          _context16.next = 4;
          return Admin.find();
        case 4:
          admin = _context16.sent;
          cov_1qshf54gp7().s[157]++;
          return _context16.abrupt("return", res.status(200).send(admin));
        case 7:
        case "end":
          return _context16.stop();
      }
    }, _callee16);
  }));
  return function (_x31, _x32) {
    return _ref26.apply(this, arguments);
  };
}());

// Update admin information
cov_1qshf54gp7().s[158]++;
router.patch("/user/admin/:id", adminAuth, /*#__PURE__*/function () {
  var _ref27 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(req, res) {
    var admin;
    return _regeneratorRuntime().wrap(function _callee17$(_context17) {
      while (1) switch (_context17.prev = _context17.next) {
        case 0:
          cov_1qshf54gp7().f[18]++;
          cov_1qshf54gp7().s[159]++;
          _context17.prev = 2;
          cov_1qshf54gp7().s[160]++;
          _context17.next = 6;
          return Admin.findOne({
            _id: req.params.id
          });
        case 6:
          admin = _context17.sent;
          cov_1qshf54gp7().s[161]++;
          if (req.body.first_name) {
            cov_1qshf54gp7().b[17][0]++;
            cov_1qshf54gp7().s[162]++;
            admin.first_name = req.body.first_name;
          } else {
            cov_1qshf54gp7().b[17][1]++;
          }
          cov_1qshf54gp7().s[163]++;
          if (req.body.last_name) {
            cov_1qshf54gp7().b[18][0]++;
            cov_1qshf54gp7().s[164]++;
            admin.last_name = req.body.last_name;
          } else {
            cov_1qshf54gp7().b[18][1]++;
          }
          cov_1qshf54gp7().s[165]++;
          if (req.body.email) {
            cov_1qshf54gp7().b[19][0]++;
            cov_1qshf54gp7().s[166]++;
            admin.email = req.body.email;
          } else {
            cov_1qshf54gp7().b[19][1]++;
          }
          cov_1qshf54gp7().s[167]++;
          _context17.next = 16;
          return admin.save();
        case 16:
          cov_1qshf54gp7().s[168]++;
          return _context17.abrupt("return", res.status(200).send({
            message: "Admin information updated successfully",
            admin: admin
          }));
        case 20:
          _context17.prev = 20;
          _context17.t0 = _context17["catch"](2);
          cov_1qshf54gp7().s[169]++;
          res.status(404).send({
            error: "User not found!"
          });
        case 24:
        case "end":
          return _context17.stop();
      }
    }, _callee17, null, [[2, 20]]);
  }));
  return function (_x33, _x34) {
    return _ref27.apply(this, arguments);
  };
}());

// Delete admin user
cov_1qshf54gp7().s[170]++;
router["delete"]("/user/admin/:id", adminAuth, /*#__PURE__*/function () {
  var _ref28 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(req, res) {
    return _regeneratorRuntime().wrap(function _callee18$(_context18) {
      while (1) switch (_context18.prev = _context18.next) {
        case 0:
          cov_1qshf54gp7().f[19]++;
          cov_1qshf54gp7().s[171]++;
          _context18.prev = 2;
          cov_1qshf54gp7().s[172]++;
          _context18.next = 6;
          return Admin.deleteOne({
            _id: req.params.id
          });
        case 6:
          cov_1qshf54gp7().s[173]++;
          return _context18.abrupt("return", res.status(200).send({
            message: "Admin user deleted successfully"
          }));
        case 10:
          _context18.prev = 10;
          _context18.t0 = _context18["catch"](2);
          cov_1qshf54gp7().s[174]++;
          res.status(404).send({
            error: "Admin user not found!"
          });
        case 14:
        case "end":
          return _context18.stop();
      }
    }, _callee18, null, [[2, 10]]);
  }));
  return function (_x35, _x36) {
    return _ref28.apply(this, arguments);
  };
}());

// Get all client users
cov_1qshf54gp7().s[175]++;
router.get("/user/client", adminAuth, /*#__PURE__*/function () {
  var _ref29 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(req, res) {
    var user;
    return _regeneratorRuntime().wrap(function _callee19$(_context19) {
      while (1) switch (_context19.prev = _context19.next) {
        case 0:
          cov_1qshf54gp7().f[20]++;
          cov_1qshf54gp7().s[176]++;
          _context19.next = 4;
          return User.find();
        case 4:
          user = _context19.sent;
          cov_1qshf54gp7().s[177]++;
          return _context19.abrupt("return", res.status(200).send(user));
        case 7:
        case "end":
          return _context19.stop();
      }
    }, _callee19);
  }));
  return function (_x37, _x38) {
    return _ref29.apply(this, arguments);
  };
}());

// Delete client user
cov_1qshf54gp7().s[178]++;
router["delete"]("/user/client/:id", adminAuth, /*#__PURE__*/function () {
  var _ref30 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(req, res) {
    return _regeneratorRuntime().wrap(function _callee20$(_context20) {
      while (1) switch (_context20.prev = _context20.next) {
        case 0:
          cov_1qshf54gp7().f[21]++;
          cov_1qshf54gp7().s[179]++;
          _context20.prev = 2;
          cov_1qshf54gp7().s[180]++;
          _context20.next = 6;
          return User.deleteOne({
            _id: req.params.id
          });
        case 6:
          cov_1qshf54gp7().s[181]++;
          return _context20.abrupt("return", res.status(200).send({
            message: "User deleted successfully"
          }));
        case 10:
          _context20.prev = 10;
          _context20.t0 = _context20["catch"](2);
          cov_1qshf54gp7().s[182]++;
          res.status(404).send({
            error: "User not found!"
          });
        case 14:
        case "end":
          return _context20.stop();
      }
    }, _callee20, null, [[2, 10]]);
  }));
  return function (_x39, _x40) {
    return _ref30.apply(this, arguments);
  };
}());

// Add new client user
cov_1qshf54gp7().s[183]++;
router.post("/user/client/signup", /*#__PURE__*/function () {
  var _ref31 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(req, res) {
    var _ref32, first_name, last_name, email, password, _ref33, error, value, oldUser, encryptedPassword, user;
    return _regeneratorRuntime().wrap(function _callee21$(_context21) {
      while (1) switch (_context21.prev = _context21.next) {
        case 0:
          cov_1qshf54gp7().f[22]++;
          cov_1qshf54gp7().s[184]++;
          _context21.prev = 2;
          _ref32 = (cov_1qshf54gp7().s[185]++, req.body), first_name = _ref32.first_name, last_name = _ref32.last_name, email = _ref32.email, password = _ref32.password;
          _ref33 = (cov_1qshf54gp7().s[186]++, validateSignUp(req.body)), error = _ref33.error, value = _ref33.value;
          cov_1qshf54gp7().s[187]++;
          if (!error) {
            _context21.next = 14;
            break;
          }
          cov_1qshf54gp7().b[20][0]++;
          cov_1qshf54gp7().s[188]++;
          console.log(error);
          cov_1qshf54gp7().s[189]++;
          return _context21.abrupt("return", res.status(400).send(error.details));
        case 14:
          cov_1qshf54gp7().b[20][1]++;
        case 15:
          cov_1qshf54gp7().s[190]++;
          _context21.next = 18;
          return User.findOne({
            email: email
          });
        case 18:
          oldUser = _context21.sent;
          cov_1qshf54gp7().s[191]++;
          if (!oldUser) {
            _context21.next = 26;
            break;
          }
          cov_1qshf54gp7().b[21][0]++;
          cov_1qshf54gp7().s[192]++;
          return _context21.abrupt("return", res.status(409).send("User Already Exist. Please Login"));
        case 26:
          cov_1qshf54gp7().b[21][1]++;
        case 27:
          cov_1qshf54gp7().s[193]++;
          _context21.next = 30;
          return bcrypt.hash(password, 10);
        case 30:
          encryptedPassword = _context21.sent;
          cov_1qshf54gp7().s[194]++;
          _context21.next = 34;
          return User.create({
            first_name: first_name,
            last_name: last_name,
            email: email.toLowerCase(),
            password: encryptedPassword
          });
        case 34:
          user = _context21.sent;
          cov_1qshf54gp7().s[195]++;
          return _context21.abrupt("return", res.status(201).send({
            message: "User added successfully",
            user: user
          }));
        case 39:
          _context21.prev = 39;
          _context21.t0 = _context21["catch"](2);
          cov_1qshf54gp7().s[196]++;
          console.log(_context21.t0);
        case 43:
        case "end":
          return _context21.stop();
      }
    }, _callee21, null, [[2, 39]]);
  }));
  return function (_x41, _x42) {
    return _ref31.apply(this, arguments);
  };
}());

// client login
cov_1qshf54gp7().s[197]++;
router.post("/user/client/login", /*#__PURE__*/function () {
  var _ref34 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(req, res) {
    var _ref35, email, password, _ref36, error, value, user, token;
    return _regeneratorRuntime().wrap(function _callee22$(_context22) {
      while (1) switch (_context22.prev = _context22.next) {
        case 0:
          cov_1qshf54gp7().f[23]++;
          cov_1qshf54gp7().s[198]++;
          _context22.prev = 2;
          _ref35 = (cov_1qshf54gp7().s[199]++, req.body), email = _ref35.email, password = _ref35.password;
          _ref36 = (cov_1qshf54gp7().s[200]++, validateLogIn(req.body)), error = _ref36.error, value = _ref36.value;
          cov_1qshf54gp7().s[201]++;
          if ((cov_1qshf54gp7().b[23][0]++, email) && (cov_1qshf54gp7().b[23][1]++, password)) {
            _context22.next = 14;
            break;
          }
          cov_1qshf54gp7().b[22][0]++;
          cov_1qshf54gp7().s[202]++;
          console.log(error);
          cov_1qshf54gp7().s[203]++;
          return _context22.abrupt("return", res.status(400).send({
            message: 'Email and password are required',
            error: error.details
          }));
        case 14:
          cov_1qshf54gp7().b[22][1]++;
        case 15:
          cov_1qshf54gp7().s[204]++;
          _context22.next = 18;
          return User.findOne({
            email: email
          });
        case 18:
          user = _context22.sent;
          cov_1qshf54gp7().s[205]++;
          _context22.t0 = (cov_1qshf54gp7().b[25][0]++, user);
          if (!_context22.t0) {
            _context22.next = 26;
            break;
          }
          cov_1qshf54gp7().b[25][1]++;
          _context22.next = 25;
          return bcrypt.compare(password, user.password);
        case 25:
          _context22.t0 = _context22.sent;
        case 26:
          if (!_context22.t0) {
            _context22.next = 35;
            break;
          }
          cov_1qshf54gp7().b[24][0]++;
          token = (cov_1qshf54gp7().s[206]++, jsonwebtoken.sign({
            user_id: user._id,
            email: email
          }, JWT_SECRET));
          cov_1qshf54gp7().s[207]++;
          user.token = token;
          cov_1qshf54gp7().s[208]++;
          return _context22.abrupt("return", res.status(200).send({
            message: 'Login successful',
            token: token
          }));
        case 35:
          cov_1qshf54gp7().b[24][1]++;
        case 36:
          cov_1qshf54gp7().s[209]++;
          return _context22.abrupt("return", res.status(401).send({
            message: 'Email or password is incorrect'
          }));
        case 40:
          _context22.prev = 40;
          _context22.t1 = _context22["catch"](2);
          cov_1qshf54gp7().s[210]++;
          console.log(_context22.t1);
        case 44:
        case "end":
          return _context22.stop();
      }
    }, _callee22, null, [[2, 40]]);
  }));
  return function (_x43, _x44) {
    return _ref34.apply(this, arguments);
  };
}());
cov_1qshf54gp7().s[211]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,