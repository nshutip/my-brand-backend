"use strict";

function cov_1vkjj7tixd() {
  var path = "/Users/nshutip/Desktop/Andela/my-brand-backend/server/swagger.js";
  var hash = "34978591a3cd8229d500b217b5d011cb60bd93f8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/nshutip/Desktop/Andela/my-brand-backend/server/swagger.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 21
        },
        end: {
          line: 1,
          column: 45
        }
      },
      "1": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "2": {
        start: {
          line: 36,
          column: 14
        },
        end: {
          line: 36,
          column: 35
        }
      },
      "3": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 22
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "34978591a3cd8229d500b217b5d011cb60bd93f8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1vkjj7tixd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1vkjj7tixd();
var swaggerJSDoc = (cov_1vkjj7tixd().s[0]++, require('swagger-jsdoc'));
// import dotenv from "dotenv";
// dotenv.config()

var options = (cov_1vkjj7tixd().s[1]++, {
  apis: ["./swagger/*.js"],
  definition: {
    openapi: "3.0.0",
    info: {
      title: "Documentation for my-brand API",
      version: "1.0.0",
      description: "An API for my personal brand website"
    },
    servers: [{
      // url: process.env.SERVER_URL,
      url: "http://localhost:4000/api/"
    }],
    components: {
      securitySchemes: {
        bearerAuth: {
          type: "apiKey",
          "in": "header",
          name: "x-access-token"
        },
        bodyAuth: {
          type: "apiKey",
          "in": "body",
          name: "token"
        }
      }
    }
  }
});
var specs = (cov_1vkjj7tixd().s[2]++, swaggerJSDoc(options));
cov_1vkjj7tixd().s[3]++;
module.exports = specs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXZramo3dGl4ZCIsImFjdHVhbENvdmVyYWdlIiwic3dhZ2dlckpTRG9jIiwicyIsInJlcXVpcmUiLCJvcHRpb25zIiwiYXBpcyIsImRlZmluaXRpb24iLCJvcGVuYXBpIiwiaW5mbyIsInRpdGxlIiwidmVyc2lvbiIsImRlc2NyaXB0aW9uIiwic2VydmVycyIsInVybCIsImNvbXBvbmVudHMiLCJzZWN1cml0eVNjaGVtZXMiLCJiZWFyZXJBdXRoIiwidHlwZSIsIm5hbWUiLCJib2R5QXV0aCIsInNwZWNzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiL1VzZXJzL25zaHV0aXAvRGVza3RvcC9BbmRlbGEvbXktYnJhbmQtYmFja2VuZC9zZXJ2ZXIvIiwic291cmNlcyI6WyJzd2FnZ2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHN3YWdnZXJKU0RvYyA9IHJlcXVpcmUoJ3N3YWdnZXItanNkb2MnKTtcbi8vIGltcG9ydCBkb3RlbnYgZnJvbSBcImRvdGVudlwiO1xuLy8gZG90ZW52LmNvbmZpZygpXG5cbmNvbnN0IG9wdGlvbnMgPSB7XG5hcGlzOiBbXCIuL3N3YWdnZXIvKi5qc1wiXSxcbmRlZmluaXRpb246IHtcbiAgICBvcGVuYXBpOiBcIjMuMC4wXCIsXG4gICAgaW5mbzoge1xuICAgIHRpdGxlOiBcIkRvY3VtZW50YXRpb24gZm9yIG15LWJyYW5kIEFQSVwiLFxuICAgIHZlcnNpb246IFwiMS4wLjBcIixcbiAgICBkZXNjcmlwdGlvbjogXCJBbiBBUEkgZm9yIG15IHBlcnNvbmFsIGJyYW5kIHdlYnNpdGVcIixcbiAgICB9LFxuICAgIHNlcnZlcnM6IFtcbiAgICB7XG4gICAgICAgIC8vIHVybDogcHJvY2Vzcy5lbnYuU0VSVkVSX1VSTCxcbiAgICAgICAgdXJsOiBcImh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9hcGkvXCJcbiAgICB9LFxuICAgIF0sXG4gICAgY29tcG9uZW50czoge1xuICAgIHNlY3VyaXR5U2NoZW1lczoge1xuICAgICAgICBiZWFyZXJBdXRoOiB7XG4gICAgICAgICAgICB0eXBlOiBcImFwaUtleVwiLFxuICAgICAgICAgICAgaW46IFwiaGVhZGVyXCIsXG4gICAgICAgICAgICBuYW1lOiBcIngtYWNjZXNzLXRva2VuXCJcbiAgICAgICAgICB9LFxuICAgICAgICBib2R5QXV0aDoge1xuICAgICAgICAgICAgdHlwZTogXCJhcGlLZXlcIixcbiAgICAgICAgICAgIGluOiBcImJvZHlcIixcbiAgICAgICAgICAgIG5hbWU6IFwidG9rZW5cIlxuICAgICAgICB9XG4gICAgfSxcbiAgICB9LFxufSxcbn07XG5jb25zdCBzcGVjcyA9IHN3YWdnZXJKU0RvYyhvcHRpb25zKTtcblxubW9kdWxlLmV4cG9ydHMgPSBzcGVjcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWVZO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7QUFmWixJQUFNRSxZQUFZLElBQUFGLGNBQUEsR0FBQUcsQ0FBQSxPQUFHQyxPQUFPLENBQUMsZUFBZSxDQUFDO0FBQzdDO0FBQ0E7O0FBRUEsSUFBTUMsT0FBTyxJQUFBTCxjQUFBLEdBQUFHLENBQUEsT0FBRztFQUNoQkcsSUFBSSxFQUFFLENBQUMsZ0JBQWdCLENBQUM7RUFDeEJDLFVBQVUsRUFBRTtJQUNSQyxPQUFPLEVBQUUsT0FBTztJQUNoQkMsSUFBSSxFQUFFO01BQ05DLEtBQUssRUFBRSxnQ0FBZ0M7TUFDdkNDLE9BQU8sRUFBRSxPQUFPO01BQ2hCQyxXQUFXLEVBQUU7SUFDYixDQUFDO0lBQ0RDLE9BQU8sRUFBRSxDQUNUO01BQ0k7TUFDQUMsR0FBRyxFQUFFO0lBQ1QsQ0FBQyxDQUNBO0lBQ0RDLFVBQVUsRUFBRTtNQUNaQyxlQUFlLEVBQUU7UUFDYkMsVUFBVSxFQUFFO1VBQ1JDLElBQUksRUFBRSxRQUFRO1VBQ2QsTUFBSSxRQUFRO1VBQ1pDLElBQUksRUFBRTtRQUNSLENBQUM7UUFDSEMsUUFBUSxFQUFFO1VBQ05GLElBQUksRUFBRSxRQUFRO1VBQ2QsTUFBSSxNQUFNO1VBQ1ZDLElBQUksRUFBRTtRQUNWO01BQ0o7SUFDQTtFQUNKO0FBQ0EsQ0FBQztBQUNELElBQU1FLEtBQUssSUFBQXJCLGNBQUEsR0FBQUcsQ0FBQSxPQUFHRCxZQUFZLENBQUNHLE9BQU8sQ0FBQztBQUFDTCxjQUFBLEdBQUFHLENBQUE7QUFFcENtQixNQUFNLENBQUNDLE9BQU8sR0FBR0YsS0FBSyJ9